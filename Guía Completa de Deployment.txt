# üöÄ Gu√≠a Completa de Deployment
## Hospital Susana L√≥pez de Valencia - Sistema Cloud

### üìã Lista de Verificaci√≥n Pre-Deploy

#### ‚úÖ Archivos Requeridos
- [ ] `portal-solicitudes.html` (Portal de usuarios)
- [ ] `portal-gestion.html` (Portal administrativo) 
- [ ] `airtable-config.js` (Configuraci√≥n API)
- [ ] `netlify.toml` (Configuraci√≥n Netlify)
- [ ] `README.md` (Documentaci√≥n)

#### ‚úÖ Configuraci√≥n de Airtable Completada
- [ ] Base creada en Airtable
- [ ] 4 tablas configuradas (Solicitudes, Tecnicos, Usuarios, SolicitudesAcceso)
- [ ] Personal Access Token generado
- [ ] Base ID obtenido

---

## üóÑÔ∏è PASO 1: Configuraci√≥n Final de Airtable

### 1.1 Crear Personal Access Token
1. Ve a [airtable.com/create/tokens](https://airtable.com/create/tokens)
2. Clic en "Create new token"
3. Nombre: `Hospital-Susana-Lopez-API`
4. Scopes requeridos:
   - ‚úÖ `data.records:read`
   - ‚úÖ `data.records:write`
   - ‚úÖ `schema.bases:read`
5. Acceso: Selecciona tu base del hospital
6. **Copia el token** (empieza con `pat...`)

### 1.2 Obtener Base ID
1. Ve a [airtable.com/api](https://airtable.com/api)
2. Selecciona tu base del hospital
3. En la URL ver√°s algo como: `https://airtable.com/app1234567890abcdef/api/docs`
4. **Copia el Base ID** (la parte `app1234567890abcdef`)

### 1.3 Verificar Estructura de Tablas

#### Tabla: `Solicitudes`
```
numero (Single line text) - ID √∫nico
servicioIngenieria (Single select) - INGENIERIA_BIOMEDICA, MECANICA, INFRAESTRUCTURA
tipoServicio (Single select) - MANTENIMIENTO_PREVENTIVO, MANTENIMIENTO_CORRECTIVO, etc.
prioridad (Single select) - CRITICA, ALTA, MEDIA, BAJA
equipo (Long text)
ubicacion (Single line text)
descripcion (Long text)
observaciones (Long text)
solicitante (Single line text)
servicioHospitalario (Single line text)
emailSolicitante (Email)
fechaCreacion (Date)
estado (Single select) - PENDIENTE, ASIGNADA, EN_PROCESO, COMPLETADA
tecnicoAsignado (Single line text)
tecnicoAsignadoId (Single line text)
fechaAsignacion (Date)
```

#### Tabla: `Tecnicos`
```
id (Single line text) - IB001, ME001, IN001
nombre (Single line text)
area (Single select) - INGENIERIA_BIOMEDICA, MECANICA, INFRAESTRUCTURA
tipo (Single select) - INGENIERO, TECNICO
especialidad (Single line text)
telefono (Phone number)
email (Email)
estado (Single select) - disponible, ocupado, inactivo
solicitudAsignada (Single line text)
fechaCreacion (Date)
```

#### Tabla: `Usuarios`
```
id (Single line text)
nombreCompleto (Single line text)
email (Email)
telefono (Phone number)
numeroDocumento (Single line text)
servicioHospitalario (Single line text)
cargo (Single line text)
codigoAcceso (Single line text) - C√≥digo de 4 d√≠gitos
estado (Single select) - ACTIVO, INACTIVO
fechaAprobacion (Date)
ultimoAcceso (Date)
```

#### Tabla: `SolicitudesAcceso`
```
id (Single line text)
nombreCompleto (Single line text)
email (Email)
telefono (Phone number)
servicioHospitalario (Single line text)
cargo (Single line text)
justificacion (Long text)
fechaSolicitud (Date)
estado (Single select) - PENDIENTE, APROBADO, RECHAZADO
esUrgente (Checkbox)
```

---

## üîß PASO 2: Configuraci√≥n de Archivos

### 2.1 Actualizar airtable-config.js
```javascript
// ‚ö†Ô∏è CONFIGURACI√ìN REQUERIDA - Reemplaza con tus valores reales
this.baseId = 'app1234567890abcdef'; // Tu Base ID de Airtable
this.apiKey = 'pat1234567890abcdef'; // Tu Personal Access Token
```

**üîí IMPORTANTE:** Estos valores deben ser reemplazados con los reales antes del deploy.

### 2.2 Verificar Nombres de Tablas
En `airtable-config.js`, confirma que los nombres coincidan exactamente:
```javascript
this.tables = {
    solicitudes: 'Solicitudes',      // Nombre exacto en Airtable
    tecnicos: 'Tecnicos',           // Nombre exacto en Airtable  
    usuarios: 'Usuarios',           // Nombre exacto en Airtable
    solicitudesAcceso: 'SolicitudesAcceso' // Nombre exacto en Airtable
};
```

---

## üåç PASO 3: Deploy en Netlify

### 3.1 Preparar Archivos para Deploy
```
hospital-system/
‚îú‚îÄ‚îÄ portal-solicitudes.html
‚îú‚îÄ‚îÄ portal-gestion.html  
‚îú‚îÄ‚îÄ airtable-config.js
‚îú‚îÄ‚îÄ netlify.toml
‚îî‚îÄ‚îÄ README.md
```

### 3.2 Deploy M√©todo 1: Drag & Drop (M√°s F√°cil)
1. Ve a [netlify.com](https://netlify.com)
2. Crea cuenta o inicia sesi√≥n
3. En el dashboard, busca el √°rea "Deploy manually"
4. **Arrastra y suelta** toda la carpeta `hospital-system`
5. Netlify autom√°ticamente:
   - Crea el sitio
   - Asigna URL temporal (ej: `amazing-hospital-123456.netlify.app`)
   - Procesa archivos

### 3.3 Deploy M√©todo 2: GitHub (M√°s Profesional)
1. Crea repositorio en GitHub
2. Sube todos los archivos
3. En Netlify:
   - "New site from Git"
   - Conecta GitHub
   - Selecciona repositorio
   - Deploy autom√°tico

### 3.4 Configuraci√≥n Post-Deploy
1. **Cambiar nombre del sitio:**
   - Site settings ‚Üí Change site name
   - Ejemplo: `hospital-susana-lopez`
   - URL final: `hospital-susana-lopez.netlify.app`

2. **Configurar dominio personalizado (opcional):**
   - Domain settings ‚Üí Add custom domain
   - Ejemplo: `solicitudes.hospitalsusana.com`

---

## üß™ PASO 4: Testing del Sistema

### 4.1 Test de Conexi√≥n Airtable
1. Abre `https://tu-sitio.netlify.app/portal-solicitudes.html`
2. Clic en "üß™ Test Conexi√≥n" en la barra superior
3. **Resultado esperado:** ‚úÖ "Conexi√≥n exitosa con Airtable"
4. **Si falla:** Verificar Base ID y API Key en `airtable-config.js`

### 4.2 Test del Portal de Solicitudes
1. Crear solicitud de acceso de prueba:
   - Nombre: `Usuario Prueba`
   - Email: `prueba@hospital.com`
   - Servicio: `URGENCIAS_ADULTO`
   - Enviar solicitud

2. Verificar en Airtable:
   - Ir a tabla `SolicitudesAcceso`
   - Debe aparecer el registro reci√©n creado

### 4.3 Test del Portal de Gesti√≥n
1. Abrir `https://tu-sitio.netlify.app/portal-gestion.html`
2. Verificar indicador de conexi√≥n (üü¢ Airtable Conectado)
3. Ir a "Gesti√≥n de Accesos"
4. Debe mostrar la solicitud de prueba
5. Aprobar solicitud ‚Üí Se genera c√≥digo de 4 d√≠gitos

### 4.4 Test de Login
1. Volver al Portal de Solicitudes
2. Usar email y c√≥digo generado para login
3. **Resultado esperado:** Acceso exitoso al portal autenticado

---

## üîí PASO 5: Seguridad y Variables de Entorno

### 5.1 Protecci√≥n de Credenciales (M√©todo Avanzado)
Para mayor seguridad, usar variables de entorno:

1. **En Netlify:**
   - Site settings ‚Üí Environment variables
   - Agregar:
     - `AIRTABLE_BASE_ID` = tu base ID
     - `AIRTABLE_API_KEY` = tu API key

2. **Modificar airtable-config.js:**
```javascript
// En lugar de hardcodear los valores
this.baseId = process.env.AIRTABLE_BASE_ID || 'app1234567890abcdef';
this.apiKey = process.env.AIRTABLE_API_KEY || 'pat1234567890abcdef';
```

### 5.2 HTTPS y Certificados
- Netlify autom√°ticamente proporciona HTTPS
- Certificado SSL gratuito de Let's Encrypt
- Forzar HTTPS en configuraci√≥n del sitio

---

## üìä PASO 6: Monitoreo y Mantenimiento

### 6.1 Monitoreo de Airtable
- **L√≠mites de API:** 5 requests/segundo, 1000/hora
- **Monitorear uso:** Airtable Dashboard ‚Üí Usage
- **Alertas:** Configurar notificaciones si se acerca al l√≠mite

### 6.2 Backup y Respaldo
1. **Backup autom√°tico Airtable:**
   - Snapshot diario autom√°tico
   - Historial de 30 d√≠as
   
2. **Backup manual:**
   - Export CSV de cada tabla mensualmente
   - Guardar en Drive/OneDrive

### 6.3 Actualizaciones del Sistema
1. **Modificaciones de c√≥digo:**
   - Editar archivos localmente
   - Re-upload a Netlify (drag & drop)
   - O push a GitHub (deploy autom√°tico)

2. **Nuevas funcionalidades:**
   - Probar en sitio de staging
   - Deploy a producci√≥n cuando est√© listo

---

## üö® PASO 7: Troubleshooting

### 7.1 Errores Comunes y Soluciones

#### Error: "Airtable API Error: 401 - Unauthorized"
**Causa:** API Key incorrecto
**Soluci√≥n:** 
- Verificar token en airtable.com/account
- Regenerar token si es necesario
- Actualizar en `airtable-config.js`

#### Error: "Airtable API Error: 404 - Not Found"
**Causa:** Base ID incorrecto o tabla no existe
**Soluci√≥n:**
- Verificar Base ID en airtable.com/api
- Confirmar nombres exactos de tablas
- Verificar permisos del token

#### Error: "CORS policy" o "Network Error"
**Causa:** Problema de red o configuraci√≥n
**Soluci√≥n:**
- Verificar conexi√≥n a internet
- Limpiar cach√© del navegador
- Probar desde navegador inc√≥gnito

#### El sitio carga pero no muestra datos
**Causa:** JavaScript no carga o error en configuraci√≥n
**Soluci√≥n:**
- Abrir DevTools (F12) ‚Üí Console
- Buscar errores en rojo
- Verificar que `airtable-config.js` se carga correctamente

### 7.2 Testing de Performance
1. **Google PageSpeed Insights:**
   - Analizar velocidad de carga
   - Optimizar si es necesario

2. **Airtable Response Time:**
   - Probar velocidad de API calls
   - Considerar caching si es lento

---

## üìà PASO 8: Escalabilidad

### 8.1 L√≠mites Actuales
- **Airtable Free:** 1,200 records/base
- **Netlify Free:** 100 GB bandwidth/mes
- **Usuarios concurrentes:** ~50-100 sin problemas

### 8.2 Upgrade Path
- **Airtable Pro:** $10/mes ‚Üí 50,000 records
- **Netlify Pro:** $19/mes ‚Üí 400 GB bandwidth
- **CDN:** Cloudflare para mejor performance global

---

## ‚úÖ CHECKLIST FINAL DE DEPLOYMENT

### Pre-Deploy
- [ ] Airtable base configurada completamente
- [ ] 4 tablas creadas con campos correctos
- [ ] Personal Access Token generado
- [ ] Base ID copiado
- [ ] Credenciales actualizadas en `airtable-config.js`
- [ ] Todos los archivos listos para upload

### Deploy
- [ ] Sitio subido a Netlify exitosamente
- [ ] URL del sitio funcionando
- [ ] HTTPS habilitado autom√°ticamente
- [ ] Test de conexi√≥n Airtable exitoso
- [ ] Portal de Solicitudes carga correctamente
- [ ] Portal de Gesti√≥n carga correctamente

### Post-Deploy Testing
- [ ] Crear solicitud de acceso de prueba
- [ ] Verificar aparece en Airtable
- [ ] Aprobar solicitud desde Portal de Gesti√≥n
- [ ] C√≥digo de 4 d√≠gitos generado correctamente
- [ ] Login exitoso con c√≥digo
- [ ] Crear solicitud de mantenimiento
- [ ] Verificar sincronizaci√≥n bidireccional
- [ ] Test desde m√∫ltiples dispositivos/navegadores

### Documentaci√≥n
- [ ] URLs finales documentadas
- [ ] Credenciales guardadas de forma segura
- [ ] Manual de usuario creado
- [ ] Contactos de soporte definidos

---

## üéâ ¬°FELICITACIONES!

Su Sistema de Gesti√≥n Hospitalaria ahora est√° funcionando en la nube con:

- ‚úÖ **Acceso Global:** Disponible desde cualquier computador con internet
- ‚úÖ **Base de Datos en la Nube:** Airtable como backend robusto
- ‚úÖ **Sincronizaci√≥n en Tiempo Real:** Cambios visibles inmediatamente
- ‚úÖ **Respaldo Autom√°tico:** Datos seguros en Airtable
- ‚úÖ **Escalabilidad:** Puede crecer con las necesidades del hospital
- ‚úÖ **HTTPS Seguro:** Certificados SSL autom√°ticos
- ‚úÖ **99.9% Uptime:** Disponibilidad garantizada por Netlify

### URLs Finales:
- **Portal de Solicitudes:** `https://tu-sitio.netlify.app/portal-solicitudes.html`
- **Portal de Gesti√≥n:** `https://tu-sitio.netlify.app/portal-gestion.html`

### Pr√≥ximos Pasos:
1. Capacitar al personal en el uso del sistema
2. Crear usuarios iniciales para las √°reas
3. Configurar t√©cnicos en el sistema
4. Comenzar operaci√≥n normal
5. Monitorear y optimizar seg√∫n necesidades

**¬°Su hospital ahora tiene un sistema de gesti√≥n moderno y profesional en la nube!** üè•‚ú®